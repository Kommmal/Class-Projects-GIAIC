# -*- coding: utf-8 -*-
"""05_loops_control_flow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KC55gG5t3wtuO5Iw3c3b1cYOi60LuOfv
"""

# Guess My Number

# I am thinking of a number between 0 and 99... Enter a guess: 50 Your guess is too high

# Enter a new number: 25 Your guess is too low

# Enter a new number: 40 Your guess is too low

# Enter a new number: 45 Your guess is too low

# Enter a new number: 48 Congrats! The number was: 48

import random

def guess():
  random_num: int = random.randint(1,99)
  guess: int = int(input("Guess My Number \nI am thinking of a number between 0 and 99... Enter a guess:  "))
  while guess != random_num:
    if guess < random_num:
      print("Your guess is too low")
    elif guess > random_num:
      print("Your guess is too high")
    guess: int = int(input("Enter a new number:  "))
  print("You guess correctly")

def main():
    guess()

if __name__ == '__main__':
    main()

# Write a program to print terms in the Fibonacci sequence up to a maximum value.

# In the 13th century, the Italian mathematician Leonardo Fibonacci, as a way to explain the geometric growth of a population of rabbits, devised a mathematical sequence that now bears his name. The first two terms in this sequence, Fib(0) and Fib(1), are 0 and 1, and every subsequent term is the sum of the preceding two. Thus, the first several terms in the Fibonacci sequence look like this:

# Fib(0) = 0 Fib(1) = 1 Fib(2) = 1 = 0 + 1 Fib(3) = 2 = 1 + 1 Fib(4) = 3 = 1 + 2 Fib(5) = 5 = 2 + 3

# Write a program that displays the terms in the Fibonacci sequence, starting with Fib(0) and continuing as long as the terms are less than 10,000 (you should store this value as a constant!). Thus, your program should produce the following sample run:

# 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765

MAX_VALUE : int = 10000

def main():
  first = 0
  second = 1

  print(first, end=" ")

  while second < MAX_VALUE:
      print(second, end=" ")
      next_number = first + second
      first = second
      second = next_number


if __name__ == '__main__':
    main()

# Write a program that prints the first 20 even numbers. There are several correct approaches, but they all use a loop of some sort. Do no write twenty print statements

# The first even number is 0:

# 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38

def main():

 for i in range(20):
  print(i*2)

if __name__ == '__main__':
    main()

# Write a program which prompts the user to type an affirmation of your choice (we'll use "I am capable of doing anything I put my mind to.") until they type it correctly. Sometimes, especially in the midst of such uncertain times, we just need to be reminded that we are resilient, capable, and strong; this little Python program may be able to help!

# Here's a sample run of the program (user input is in blue):

# Please type the following affirmation: I am capable of doing anything I put my mind to. Hmmm That was not the affirmation. Please type the following affirmation: I am capable of doing anything I put my mind to. I am capable of doing anything I put my mind to. That's right! :)

# Note that you can call input() with no prompt and it will still wait for a user to type something!



affirmation: str = "I am capable of doing anything I put my mind to."

def main():
  print(f"Please type the following affirmation: {affirmation}")
  user_input:str = input("")
  while  user_input != affirmation:
    print(f"Hmmm That was not the affirmation. \nPlease type the following affirmation: {affirmation}")
    user_input:str = input("")
  print("That's right! :)")

if __name__ == '__main__':
    main()

# Write a program that prints out the calls for a spaceship that is about to launch. Countdown from 10 to 1 and then output Liftoff!

# Here's a sample run of the program:

# 10 9 8 7 6 5 4 3 2 1 Liftoff!


def main():

    for i in range(10, 0, -1):
        print(i, end=" ")
    print("Liftoff!")

if __name__ == '__main__':
    main()

# Write a program that asks a user to enter a number. Your program will then double that number and print out the result. It will repeat that process until the value is 100 or greater.

# For example if the user enters the number 2 you would then print:



def main():
    curr_value:int = int(input("Enter a number you wanna double: "))
    while curr_value < 100:
      curr_value = curr_value * 2
      print(curr_value, end=" ")


if __name__ == '__main__':
    main()